package bot

import (
	"log"
	"os"
	"time"

	"gopkg.in/telebot.v4"
)

func Init() (*telebot.Bot, error) {

	settings := telebot.Settings{
		Token:  os.Getenv("TOKEN"),
		Poller: &telebot.LongPoller{Timeout: time.Second * 5},
	}

	bot, err := telebot.NewBot(settings)
	if err != nil {
		log.Println("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–æ—Ç–∞:", err)
	}

	menu := &telebot.ReplyMarkup{ResizeKeyboard: true}
	// selector := &telebot.ReplyMarkup{}

	InitHandlers(bot, menu)

	return bot, err

}

func InitHandlers(bot *telebot.Bot, menu *telebot.ReplyMarkup) {

	btnOSAGO := menu.Text("üìÑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–ª–∏—Å –û–°–ê–ì–û üìÑ")
	btnOSGOP := menu.Text("üìÑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ü–æ–ª–∏—Å –û–°–ì–û–ü üìÑ")
	btnMKAD := menu.Text("üöó –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–æ–ø—É—Å–∫ –Ω–∞ –ú–ö–ê–î üöó")
	btnTO := menu.Text("üí≥ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫—É—é –∫–∞—Ä—Ç—É –¢–û üí≥")
	btnManager := menu.Text("‚òéÔ∏è –°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º ‚òéÔ∏è")
	btnMessager := menu.Text("ü§≥ –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è ü§≥")

	menu.Reply(
		menu.Row(btnOSAGO),
		menu.Row(btnOSGOP),
		menu.Row(btnTO),
		menu.Row(btnMKAD),
		menu.Row(btnManager),
		menu.Row(btnMessager),
	)

	bot.Handle("/hello", func(ctx telebot.Context) error {
		return ctx.Send("–ü—Ä–∏–≤–µ—Ç!", menu)
	})

	bot.Handle(&btnOSAGO, func(ctx telebot.Context) error {
		return ctx.Send("–¢—ã –Ω–∞–∂–∞–ª –Ω–∞ –æ—Å–∞–≥–æ!")
	})
	bot.Handle(&btnOSGOP, func(ctx telebot.Context) error {
		return ctx.Send("–¢—ã –Ω–∞–∂–∞–ª –Ω–∞ –æ—Å–≥–æ–ø!")
	})
	bot.Handle(&btnTO, func(ctx telebot.Context) error {
		return ctx.Send("–¢—ã –Ω–∞–∂–∞–ª –Ω–∞ –¢–û!")
	})
	bot.Handle(&btnMKAD, func(ctx telebot.Context) error {
		return ctx.Send("–¢—ã –Ω–∞–∂–∞–ª –Ω–∞ –º–∫–∞–¥!")
	})
	bot.Handle(&btnManager, func(ctx telebot.Context) error {
		return ctx.Send("–¢—ã –Ω–∞–∂–∞–ª –Ω–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–∞!")
	})
	bot.Handle(&btnMessager, func(ctx telebot.Context) error {
		return ctx.Send("–¢—ã –Ω–∞–∂–∞–ª –Ω–∞ –ø–æ–¥–ø–∏—Å–∫—É!")
	})
}
