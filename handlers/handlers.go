package handlers

import (
	"fmt"
	"log"
	"tgbot/infrastructure"
	"tgbot/models"

	"gopkg.in/telebot.v4"
)

func HandleStart(ctx telebot.Context) error {

	err := ctx.Send("–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –±–æ—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ–º–æ–±–∏–ª–µ –ø–æ –í–ò–ù –Ω–æ–º–µ—Ä—É")
	if err != nil {
		log.Println(err)
	}
	err = ctx.Send("–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à –í–ò–ù –Ω–∏–∂–µ. (–í–ò–ù –Ω–æ–º–µ—Ä –Ω–µ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ä—É—Å—Å–∫–∏—Ö –±—É–∫–≤, –∞ —Ç–∞–∫ –∂–µ –ª–∞—Ç–∏–Ω—Å–∫–∏—Ö –±—É–∫–≤ O, I, Q)")

	return err
}

// –ü–æ–º–µ–Ω—è—Ç—å –Ω–∞ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
const (
	Lightweight = "–õ–µ–≥–∫–æ–≤–∞—è"
	Gazel       = "–õ–µ–≥–∫–æ–≤–∞—è –≥–∞–∑–µ–ª—å"
	Taxi        = "–¢–∞–∫—Å–∏"
	Highweight  = "–ì—Ä—É–∑–æ–≤–æ–π"
)

func HandleVINSend(ctx telebot.Context) error {
	msg := ctx.Message()

	newUser := models.CreateUser(msg.Sender.FirstName, msg.Sender.LastName, msg.Sender.Username)
	VIN := msg.Text

	if models.IsVIN(VIN) {

		ctx.Send("–ü–æ—Å—ã–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å")

		osago, err := infrastructure.OSAGORequest(VIN)
		if err != nil {
			log.Println("–ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –û–°–ê–ì–û –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞:", err)
			return ctx.Send("–ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –≤ –¥—Ä—É–≥–æ–π —Ä–∞–∑")
		}

		message := fmt.Sprintf(`%s %s. –í–∞—à –í–ò–ù –≤–∞–ª–∏–¥–µ–Ω, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –Ω–µ–º—É –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –Ω–∏–∂–µ:
	üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª–∏—Å–µ –û–°–ê–ì–û:
			‚Ä¢ –°–µ—Ä–∏—è –∏ –Ω–æ–º–µ—Ä: %s %s
			‚Ä¢ –°—Ç—Ä–∞—Ö–æ–≤–∞—è –∫–æ–º–ø–∞–Ω–∏—è: %s
			‚Ä¢ –°—Ç–∞—Ç—É—Å: %s

	üìÖ –°—Ä–æ–∫–∏ –¥–µ–π—Å—Ç–≤–∏—è:
			‚Ä¢ –ü–µ—Ä–∏–æ–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è: %s
			‚Üí –ù–∞—á–∞–ª–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è: %s
			‚Üí –û–∫–æ–Ω—á–∞–Ω–∏–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è: %s
			‚Ä¢ –î–µ–π—Å—Ç–≤–∏–µ –¥–æ–≥–æ–≤–æ—Ä–∞: —Å %s –ø–æ %s

	üöó –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–≤—Ç–æ–º–æ–±–∏–ª–µ:
			‚Ä¢ –ú–∞—Ä–∫–∞ –∏ –º–æ–¥–µ–ª—å: %s
			‚Ä¢ –ì–æ—Å. –Ω–æ–º–µ—Ä: %s
			‚Ä¢ VIN: %s

	üåç –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –Ω–∞ –ë–µ–ª–∞—Ä—É—Å—å: %s`,
			newUser.FirstName(),
			newUser.LastName(),
			osago.Seria,
			osago.Nomer,
			osago.OrgOsago,
			osago.Status,
			osago.Term,
			osago.TermStart,
			osago.TermStop,
			osago.StartPolis,
			osago.StopPolis,
			osago.BrandModel,
			osago.RegNum,
			osago.VIN,
			osago.DopBelarus,
		)
		return ctx.Send(message)
	} else {
		return ctx.Send(fmt.Sprintf(
			"%s %s. –í–∞—à –í–ò–ù –Ω–µ–≤–∞–ª–∏–¥–µ–Ω.\nVIN –¥–æ–ª–∂–µ–Ω —Å–æ—Å—Ç–æ—è—Ç—å –∏–∑ 17 –ª–∞—Ç–∏–Ω—Å–∫–∏—Ö –±—É–∫–≤ –∏ —Ü–∏—Ñ—Ä, –Ω–µ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –±—É–∫–≤ O, I, Q",
			newUser.FirstName(),
			newUser.LastName(),
		))
	}
}
